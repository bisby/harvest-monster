import { get } from "svelte/store";
import { crafts, settings } from "../stores";
import { formatPrice } from "./formatPrice";

let leagues = {
  std: "Standard",
  lsc: "Sentinel Softcore",
  lhc: "Sentinel Hardcore",
};

const formatter = {
  prefix: ({ currentLeagueName, username, willingToStream }) => {
    let post = "";

    post += `**WTS ${currentLeagueName}**`;

    if (username && username.trim() !== "") {
      post += ` - IGN: **${username}**`;
    }

    post += ` \`| generated by HarvestMonster\``;

    post += `\n`;

    if (willingToStream) {
      post += `   *Can stream if requested*\n`;
    }

    // Custom notes would go here.

    return post;
  },
  craft: (craft, { maxCraftLength }) => {
    let post = "";
    const bufferLength = maxCraftLength - craft.name.length + 4;
    const buffer = Array.from(Array(bufferLength), () => "").join(" ");

    post += "   ";

    if (craft.quantity === 0) {
      post += "~~";
    }

    post += `\`${craft.quantity}x ${craft.name}${buffer} [${
      craft.level > 0 ? craft.level : "83"
    }]  <${formatPrice(craft.price)}>\``;

    if (craft.quantity === 0) {
      post += "~~";
    }

    post += "\n";

    return post;
  },
  suffix: () => "",
};

export const formatPost = () => {
  const currentCrafts = get(crafts);
  const currentSettings = get(settings);
  const formatterSettings = {
    currentLeagueName: leagues[currentSettings.league.code],
    maxCraftLength: [...currentCrafts].sort((a, b) =>
      b.name.length > a.name.length ? 1 : -1
    )[0].name.length,
    ...currentSettings,
  };
  let post = "";

  post += formatter.prefix(formatterSettings);

  for (let craft of currentCrafts) {
    post += formatter.craft(craft, formatterSettings);
  }

  post += formatter.suffix(formatterSettings);

  return post;
};
